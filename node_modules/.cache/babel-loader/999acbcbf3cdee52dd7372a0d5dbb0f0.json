{"ast":null,"code":"import _defineProperty from \"/Users/user/web/bootcamp/exercises/react practise/udemyReact/my-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/user/web/bootcamp/exercises/react practise/udemyReact/my-app/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport './index.scss';\nimport './index.html';\nimport Person from './Person/Person';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        id: 'a1',\n        name: 'Max',\n        age: 28\n      }, {\n        id: 'b2',\n        name: 'Manu',\n        age: 29\n      }, {\n        id: 'c3',\n        name: 'Stephanie',\n        age: 26\n      }],\n      otherState: 'some other value',\n      showPersons: false\n    };\n\n    this.nameChangedHandler = (event, id) => {\n      const personIndex = this.state.persons.findIndex(p => {\n        return p.id === id;\n      });\n\n      const person = _objectSpread({}, this.state.persons[personIndex]); // const person = Object.assign({}, this.state.persons[personIndex]);\n\n\n      person.name = event.target.value;\n      const persons = [...this.state.persons];\n      persons[personIndex] = person;\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.deletePersonHandler = personIndex => {\n      // const persons = this.state.persons.slice();\n      const persons = [...this.state.persons];\n      persons.splice(personIndex, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.togglePersonsHandler = () => {\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n  }\n\n  render() {\n    const style = {\n      backgroundColor: 'green',\n      color: 'white',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px'\n    };\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.state.persons.map((person, index) => {\n        return React.createElement(Person, {\n          click: () => this.deletePersonHandler(index),\n          name: person.name,\n          age: person.age,\n          key: person.id,\n          changed: event => this.nameChangedHandler(event, person.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n      }));\n      style.backgroundColor = 'red';\n    }\n\n    const classes = [];\n\n    if (this.state.persons.length <= 2) {\n      classes.push('red');\n    }\n\n    if (this.state.persons.length <= 1) {\n      classes.push('bold');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"I am a react app\"), React.createElement(\"p\", {\n      class: classes.join(' '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"This works!\"), React.createElement(\"button\", {\n      style: style,\n      onClick: () => this.togglePersonsHandler(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Toggle persons\"), persons\n    /* using ternary operator for conditional statements\n    { \n    this.state.showPersons === true ?\n    <div>\n    <Person \n    name={this.state.persons[0].name} \n    age={this.state.persons[0].age} />\n    <Person \n    name={this.state.persons[1].name} \n    age={this.state.persons[1].age} \n    click={this.switchNameHandler.bind(this, 'Max!!')}\n    changed ={this.nameChangedHandler}\n    >My hobbies: racing</Person> \n    <Person \n    name={this.state.persons[2].name} \n    age={this.state.persons[2].age} />\n    </div>: null\n    } \n    not recommended as it clutters the return part... */\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/user/web/bootcamp/exercises/react practise/udemyReact/my-app/src/App.js"],"names":["React","Component","Person","App","state","persons","id","name","age","otherState","showPersons","nameChangedHandler","event","personIndex","findIndex","p","person","target","value","setState","deletePersonHandler","splice","togglePersonsHandler","doesShow","render","style","backgroundColor","color","font","border","padding","map","index","classes","length","push","join"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './index.scss';\nimport './index.html';\n\nimport Person from './Person/Person';\n\n\n\nclass App extends Component {\n    state = {\n        persons: [\n            { id: 'a1', name: 'Max', age: 28 },\n            { id: 'b2', name: 'Manu', age: 29 },\n            { id: 'c3', name: 'Stephanie', age: 26 }\n        ],\n        otherState: 'some other value',\n        showPersons: false\n    }\n\n\n    \n\n    nameChangedHandler = ( event, id ) => {\n        const personIndex = this.state.persons.findIndex(p => {\n          return p.id === id;\n        });\n    \n        const person = {\n          ...this.state.persons[personIndex]\n        };\n    \n        // const person = Object.assign({}, this.state.persons[personIndex]);\n    \n        person.name = event.target.value;\n    \n        const persons = [...this.state.persons];\n        persons[personIndex] = person;\n    \n        this.setState( {persons: persons} );\n      }\n    \n      deletePersonHandler = (personIndex) => {\n        // const persons = this.state.persons.slice();\n        const persons = [...this.state.persons];\n        persons.splice(personIndex, 1);\n        this.setState({persons: persons});\n      }\n\n    togglePersonsHandler = () => {\n        const doesShow = this.state.showPersons;\n        this.setState({ showPersons: !doesShow });\n\n    }\n\n    render() {\n        const style = {\n            backgroundColor: 'green',\n            color: 'white',\n            font: 'inherit',\n            border: '1px solid blue',\n            padding: '8px'\n        };\n\n        let persons = null;\n        \n        if (this.state.showPersons) {\n            persons = (\n                <div>\n                    {this.state.persons.map((person, index) => {\n                        return <Person\n                            click={() => this.deletePersonHandler(index)}\n                            name={person.name}\n                            age={person.age}\n                            key={person.id}\n                            changed={(event) => this.nameChangedHandler(event, person.id)} />\n                    })}\n                </div>\n            );\n            style.backgroundColor = 'red';\n        }\n\n        const classes = [];\n        if(this.state.persons.length <= 2) {\n            classes.push('red');\n        }\n        if(this.state.persons.length <= 1) {\n            classes.push('bold');\n        }\n\n        return (\n            <div className=\"App\">\n                <h1>I am a react app</h1>\n                <p class= {classes.join(' ')}>This works!</p>\n                <button style={style} onClick={() => this.togglePersonsHandler()}>Toggle persons</button>\n\n\n\n                {persons/* using ternary operator for conditional statements\n        { \n            this.state.showPersons === true ?\n        <div>\n            <Person \n            name={this.state.persons[0].name} \n            age={this.state.persons[0].age} />\n            <Person \n            name={this.state.persons[1].name} \n            age={this.state.persons[1].age} \n            click={this.switchNameHandler.bind(this, 'Max!!')}\n            changed ={this.nameChangedHandler}\n            >My hobbies: racing</Person> \n            <Person \n            name={this.state.persons[2].name} \n            age={this.state.persons[2].age} />\n        </div>: null\n        } \n        not recommended as it clutters the return part... */}\n\n\n\n            </div>\n\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}