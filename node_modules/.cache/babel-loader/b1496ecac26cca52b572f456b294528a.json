{"ast":null,"code":"import _defineProperty from \"/Users/user/web/bootcamp/exercises/react practise/udemyReact/my-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/user/web/bootcamp/exercises/react practise/udemyReact/my-app/src/containers/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport classes from './App.css';\nimport Persons from '../components/Persons/Persons';\nimport Cockpit from '../components/Cockpit/Cockpit';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        id: 'a1',\n        name: 'Max',\n        age: 28\n      }, {\n        id: 'b2',\n        name: 'Manu',\n        age: 29\n      }, {\n        id: 'c3',\n        name: 'Stephanie',\n        age: 26\n      }],\n      otherState: 'some other value',\n      showPersons: false\n    };\n\n    this.nameChangedHandler = (event, id) => {\n      const personIndex = this.state.persons.findIndex(p => {\n        return p.id === id;\n      });\n\n      const person = _objectSpread({}, this.state.persons[personIndex]); // const person = Object.assign({}, this.state.persons[personIndex]);\n\n\n      person.name = event.target.value;\n      const persons = [...this.state.persons];\n      persons[personIndex] = person;\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.deletePersonHandler = personIndex => {\n      // const persons = this.state.persons.slice();\n      const persons = [...this.state.persons];\n      persons.splice(personIndex, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.togglePersonsHandler = () => {\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n  }\n\n  render() {\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = React.createElement(Persons, {\n        persons: this.state.persons,\n        clicked: this.deletePersonHandler,\n        changed: this.nameChangedHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: classes.App,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Cockpit, {\n      showPersons: this.state.showPersons,\n      persons: this.state.persons,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), persons\n    /* using ternary operator for conditional statements\n    { \n    this.state.showPersons === true ?\n    <div>\n    <Person \n    name={this.state.persons[0].name} \n    age={this.state.persons[0].age} />\n    <Person \n    name={this.state.persons[1].name} \n    age={this.state.persons[1].age} \n    click={this.switchNameHandler.bind(this, 'Max!!')}\n    changed ={this.nameChangedHandler}\n    >My hobbies: racing</Person> \n    <Person \n    name={this.state.persons[2].name} \n    age={this.state.persons[2].age} />\n    </div>: null\n    } \n    not recommended as it clutters the return part... */\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/user/web/bootcamp/exercises/react practise/udemyReact/my-app/src/containers/App.js"],"names":["React","Component","classes","Persons","Cockpit","App","state","persons","id","name","age","otherState","showPersons","nameChangedHandler","event","personIndex","findIndex","p","person","target","value","setState","deletePersonHandler","splice","togglePersonsHandler","doesShow","render"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,OAAP,MAAoB,+BAApB;;AAGA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACxBK,KADwB,GAChB;AACJC,MAAAA,OAAO,EAAE,CACL;AAAEC,QAAAA,EAAE,EAAE,IAAN;AAAYC,QAAAA,IAAI,EAAE,KAAlB;AAAyBC,QAAAA,GAAG,EAAE;AAA9B,OADK,EAEL;AAAEF,QAAAA,EAAE,EAAE,IAAN;AAAYC,QAAAA,IAAI,EAAE,MAAlB;AAA0BC,QAAAA,GAAG,EAAE;AAA/B,OAFK,EAGL;AAAEF,QAAAA,EAAE,EAAE,IAAN;AAAYC,QAAAA,IAAI,EAAE,WAAlB;AAA+BC,QAAAA,GAAG,EAAE;AAApC,OAHK,CADL;AAMJC,MAAAA,UAAU,EAAE,kBANR;AAOJC,MAAAA,WAAW,EAAE;AAPT,KADgB;;AAAA,SAYxBC,kBAZwB,GAYH,CAAEC,KAAF,EAASN,EAAT,KAAiB;AAClC,YAAMO,WAAW,GAAG,KAAKT,KAAL,CAAWC,OAAX,CAAmBS,SAAnB,CAA6BC,CAAC,IAAI;AACpD,eAAOA,CAAC,CAACT,EAAF,KAASA,EAAhB;AACD,OAFmB,CAApB;;AAIA,YAAMU,MAAM,qBACP,KAAKZ,KAAL,CAAWC,OAAX,CAAmBQ,WAAnB,CADO,CAAZ,CALkC,CASlC;;;AAEAG,MAAAA,MAAM,CAACT,IAAP,GAAcK,KAAK,CAACK,MAAN,CAAaC,KAA3B;AAEA,YAAMb,OAAO,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,OAAf,CAAhB;AACAA,MAAAA,OAAO,CAACQ,WAAD,CAAP,GAAuBG,MAAvB;AAEA,WAAKG,QAAL,CAAe;AAACd,QAAAA,OAAO,EAAEA;AAAV,OAAf;AACD,KA7BqB;;AAAA,SA+BtBe,mBA/BsB,GA+BCP,WAAD,IAAiB;AACrC;AACA,YAAMR,OAAO,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,OAAf,CAAhB;AACAA,MAAAA,OAAO,CAACgB,MAAR,CAAeR,WAAf,EAA4B,CAA5B;AACA,WAAKM,QAAL,CAAc;AAACd,QAAAA,OAAO,EAAEA;AAAV,OAAd;AACD,KApCqB;;AAAA,SAsCxBiB,oBAtCwB,GAsCD,MAAM;AACzB,YAAMC,QAAQ,GAAG,KAAKnB,KAAL,CAAWM,WAA5B;AACA,WAAKS,QAAL,CAAc;AAAET,QAAAA,WAAW,EAAE,CAACa;AAAhB,OAAd;AAEH,KA1CuB;AAAA;;AA4CxBC,EAAAA,MAAM,GAAG;AAEL,QAAInB,OAAO,GAAG,IAAd;;AAEA,QAAI,KAAKD,KAAL,CAAWM,WAAf,EAA4B;AACxBL,MAAAA,OAAO,GAAG,oBAAC,OAAD;AACF,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OADlB;AAEF,QAAA,OAAO,EAAE,KAAKe,mBAFZ;AAGF,QAAA,OAAO,EAAE,KAAKT,kBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AAKH;;AAED,WAEI;AAAK,MAAA,SAAS,EAAEX,OAAO,CAACG,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AACA,MAAA,WAAW,EAAG,KAAKC,KAAL,CAAWM,WADzB;AAEA,MAAA,OAAO,EAAG,KAAKN,KAAL,CAAWC,OAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMKA;AAAO;;;;;;;;;;;;;;;;;;;AANZ,KAFJ;AAiCH;;AAzFuB;;AA4F5B,eAAeF,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport classes from './App.css';\nimport Persons from '../components/Persons/Persons';\nimport Cockpit from '../components/Cockpit/Cockpit';\n\n\nclass App extends Component {\n    state = {\n        persons: [\n            { id: 'a1', name: 'Max', age: 28 },\n            { id: 'b2', name: 'Manu', age: 29 },\n            { id: 'c3', name: 'Stephanie', age: 26 }\n        ],\n        otherState: 'some other value',\n        showPersons: false\n    }\n\n\n    nameChangedHandler = ( event, id ) => {\n        const personIndex = this.state.persons.findIndex(p => {\n          return p.id === id;\n        });\n    \n        const person = {\n          ...this.state.persons[personIndex]\n        };\n    \n        // const person = Object.assign({}, this.state.persons[personIndex]);\n    \n        person.name = event.target.value;\n    \n        const persons = [...this.state.persons];\n        persons[personIndex] = person;\n    \n        this.setState( {persons: persons} );\n      }\n    \n      deletePersonHandler = (personIndex) => {\n        // const persons = this.state.persons.slice();\n        const persons = [...this.state.persons];\n        persons.splice(personIndex, 1);\n        this.setState({persons: persons});\n      }\n\n    togglePersonsHandler = () => {\n        const doesShow = this.state.showPersons;\n        this.setState({ showPersons: !doesShow });\n\n    }\n\n    render() {\n        \n        let persons = null;\n        \n        if (this.state.showPersons) {\n            persons = <Persons\n                    persons={this.state.persons}\n                    clicked={this.deletePersonHandler}\n                    changed={this.nameChangedHandler}\n                    />;\n        }\n\n        return (\n          \n            <div className={classes.App}>\n                <Cockpit \n                showPersons= {this.state.showPersons}\n                persons= {this.state.persons}\n                />\n            \n                {persons/* using ternary operator for conditional statements\n        { \n            this.state.showPersons === true ?\n        <div>\n            <Person \n            name={this.state.persons[0].name} \n            age={this.state.persons[0].age} />\n            <Person \n            name={this.state.persons[1].name} \n            age={this.state.persons[1].age} \n            click={this.switchNameHandler.bind(this, 'Max!!')}\n            changed ={this.nameChangedHandler}\n            >My hobbies: racing</Person> \n            <Person \n            name={this.state.persons[2].name} \n            age={this.state.persons[2].age} />\n        </div>: null\n        } \n        not recommended as it clutters the return part... */}\n\n\n\n            </div>\n          \n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}